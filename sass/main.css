@-webkit-keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
    transform: translateX(-10rem);
    /*start from 100px left in comparison to original position*/
  }
  80% {
    -webkit-transform: translateX(1rem);
    transform: translateX(1rem);
    /*at 80% of the animation move it 10px right of the original position */
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0);
    /*at the and let it be where it is*/
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
    transform: translateX(-10rem);
    /*start from 100px left in comparison to original position*/
  }
  80% {
    -webkit-transform: translateX(1rem);
    transform: translateX(1rem);
    /*at 80% of the animation move it 10px right of the original position */
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0);
    /*at the and let it be where it is*/
  }
}

/*it's the most convenient to use only opacity and transform properties in animations*/
@-webkit-keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
    transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
    transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }
}

@-webkit-keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }
}

*,
*::after,
*::before {
  /*this will apply to every after and before element as well, which wasn't the case earlier*/
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  /*this is moved to body, and this implies that each element will inherit box-sizing property value */
}

/*with this universal selector I apply all these features to every single element on the page*/
html {
  font-size: 62.5%;
  /*this is standard when defining font-size for later usage of rem units , percentages are mandatory here*/
}

body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/*all of the font characteristics are written in the body selector, beacuse it's reasonable to take advantage of inheritance concept */
body {
  font-family: "Lato", sans-serif;
  /*font-size: 16px;*/
  font-weight: 400;
  line-height: 1.7;
  /*this means 1.7 bigger than the predefined line-height*/
  color: #777;
  padding: 3rem;
  /*this adds 30px of whitespace around entire page, which gives a cool modern look*/
}

/*all of the font characteristics are written in the body selector, beacuse it's reasonable to take advantage of inheritance concept */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /*to stop shaking after animation is done (albeit i do not see the shaking happened)*/
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  -webkit-animation-name: moveInLeft;
  animation-name: moveInLeft;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
  /*
                animation-delay: 2s;
                animation-iteration-count: 2;
                */
  /*additional functions that are not needed now*/
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  -webkit-animation: moveInRight 1s ease-out;
  animation: moveInRight 1s ease-out;
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: -webkit-gradient(linear, left top, right top, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  /*firstly, this will paint the background of a text
                                                                                        and later the text itself, when new properties appear*/
  display: inline-block;
  /*cut taken space that isn't necessary*/
  -webkit-background-clip: text;
  /*this property is not so widely supported*/
  color: transparent;
  /*in order to background color get to view this is necessity*/
  letter-spacing: .2rem;
  -webkit-transition: all .2s;
  transition: all .2s;
}

.heading-secondary:hover {
  -webkit-transform: skewY(2deg) skewX(15deg) scaleX(1.1);
          transform: skewY(2deg) skewX(15deg) scaleX(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-child) {
  /*because paragraphs come repeatedly one after another they should be separated*/
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

.u-margin-bottom-medium {
  margin-bottom: 4rem;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.u-margin-top-big {
  margin-top: 8rem;
}

.u-margin-top-huge {
  margin-top: 10rem;
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  -webkit-transition: all .2s;
  transition: all .2s;
  /* all the properties are considered here (stated and otherwise)*/
  position: relative;
  /*because of the :after element*/
  font-size: 1.6rem;
}

.btn:hover {
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /*making real feeling of pulling the button up by adding shadow */
}

.btn:hover:after {
  -webkit-transform: scaleX(1.4) scaleY(1.6);
          transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
  /*this is the trick for fading smt out*/
}

.btn:active {
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
  /*this is in respect of inital position, NOT a hovered one */
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  /*making real sense of pressing the button by reducing shadow that was present when hovered*/
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn--white:after {
  background-color: #fff;
}

.btn--green {
  background-color: #55c57a;
  color: #fff;
}

.btn--green:after {
  background-color: #55c57a;
}

.btn:after {
  content: "";
  display: inline-block;
  width: 100%;
  /*after is the child element, and this 100% value signifies that it has exact same width as the btn*/
  height: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  -webkit-transition: all .4s;
  transition: all .4s;
}

.btn--animated {
  -webkit-animation: moveInBottom .5s ease-out .75s;
          animation: moveInBottom .5s ease-out .75s;
  /*this button is supposed to come from bottom with a little bit of delay*/
  -webkit-animation-fill-mode: backwards;
          animation-fill-mode: backwards;
  /*this will automatically apply the styles of the zero percent before the animation starts*/
}

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  font-size: 1.6rem;
  display: inline-block;
  text-decoration: none;
  padding: 3px;
  /*small sizes can stay in px*/
  border-bottom: 1px solid #55c57a;
  -webkit-transition: all .2s;
  transition: all .2s;
}

.btn-text:hover {
  color: #fff;
  background-color: #55c57a;
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
}

.btn-text:active {
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.card {
  -webkit-perspective: 150rem;
          perspective: 150rem;
  /*gives 3d effect when rotating card (here concretely, it has wider range of usage)*/
  position: relative;
  height: 52rem;
  /*this has to be defined, because this container loses height due to absolute position of all it's children (they are 
                    out of normal flow); situation is similar to float, but there is no clearfix or alike thing to repair it*/
}

.card__side {
  height: 52rem;
  width: 100%;
  -webkit-transition: all .8s ease;
  transition: all .8s ease;
  position: absolute;
  /*setting two sides in one place, not separated one after another*/
  top: 0;
  left: 0;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  border-radius: 3px;
  overflow: hidden;
  /*images that are put overflow this, and corners are losing border-radius*/
  /*because clip path is used below, even this won't work, so the radius have to be written manually*/
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  /*this could be written in a variable too, it's repeating a lot*/
}

.card__side--front {
  background-color: #fff;
}

.card__side--back {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

.card__side--back-1 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#ffb900), to(#ff7730));
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730);
}

.card__side--back-2 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
}

.card__side--back-3 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#2998ff), to(#5643fa));
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa);
}

.card:hover .card__side--front {
  -webkit-transform: rotateY(-180deg);
          transform: rotateY(-180deg);
}

.card:hover .card__side--back {
  -webkit-transform: rotateY(0);
          transform: rotateY(0);
}

.card__picture {
  background-size: cover;
  height: 23rem;
  /*through experimentation*/
  background-blend-mode: screen;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  /*this is done again this way because clip-path removes overflow:hidden effect*/
}

.card__picture--1 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#ffb900), to(#ff7730)), url(../img/nat-5.jpg);
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg);
  /*only one level up beacuse i know this will compile into main.css which is one level above
                                                        current file*/
}

.card__picture--2 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#7ed56f), to(#28b485)), url(../img/nat-6.jpg);
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg);
}

.card__picture--3 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#2998ff), to(#5643fa)), url(../img/nat-7.jpg);
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg);
}

.card__heading {
  font-size: 2.8rem;
  font-weight: 300;
  color: #fff;
  text-transform: uppercase;
  text-align: right;
  position: absolute;
  top: 12rem;
  right: 2rem;
  width: 75%;
}

.card__heading-span {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
  padding: 1rem 1.5rem;
  /*this way one-line text will be pushed to two lines*/
}

.card__heading-span--1 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(255, 185, 0, 0.85)), to(rgba(255, 119, 48, 0.85)));
  background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85));
}

.card__heading-span--2 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.85)), to(rgba(40, 180, 133, 0.85)));
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85));
}

.card__heading-span--3 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(41, 152, 255, 0.85)), to(rgba(86, 67, 250, 0.85)));
  background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85));
}

.card__details {
  padding: 3rem;
}

.card__details ul {
  list-style: none;
  margin: 0 auto;
  width: 80%;
}

.card__details ul li {
  text-align: center;
  font-size: 1.5rem;
  padding: 1rem;
}

.card__details ul li:not(:last-child) {
  border-bottom: 1px solid #eee;
}

.card__cta {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 90%;
  text-align: center;
}

.card__price-box {
  text-align: center;
  color: #fff;
  margin-bottom: 8rem;
}

.card__price-only {
  font-size: 1.4rem;
  text-transform: uppercase;
}

.card__price-value {
  font-size: 6rem;
  font-weight: 100;
}

.composition {
  position: relative;
}

.composition__photo {
  width: 55%;
  /* getting images to be responsive as possible */
  border-radius: 2px;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  position: absolute;
  z-index: 10;
  -webkit-transition: all .2s;
  transition: all .2s;
  outline-offset: 2rem;
}

.composition__photo--p1 {
  left: 0;
  top: -2rem;
}

.composition__photo--p2 {
  right: 0;
  top: 2rem;
}

.composition__photo--p3 {
  left: 20%;
  top: 10rem;
}

.composition__photo:hover {
  outline: 1.5rem solid #55c57a;
  -webkit-transform: scale(1.05) translateY(-0.5rem);
          transform: scale(1.05) translateY(-0.5rem);
  /*move it a bit up, to get full effect of picking*/
  -webkit-box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
          box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
  z-index: 20;
}

.composition:hover .composition__photo:not(:hover) {
  /*it's important that the hovered element is the parent of the elements that are affected by this*/
  -webkit-transform: scale(0.95);
          transform: scale(0.95);
}

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
}

.feature-box:hover {
  -webkit-transform: translateY(-1.5rem) scale(1.03);
          transform: translateY(-1.5rem) scale(1.03);
}

.feature-box__icon {
  font-size: 6rem;
  margin-bottom: .5rem;
  background-image: -webkit-gradient(linear, left top, right top, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
}

.story {
  width: 75%;
  margin: 0 auto;
  -webkit-box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
          box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  -webkit-transform: skewX(-12deg);
          transform: skewX(-12deg);
}

.story:not(:last-child) {
  margin-bottom: 8rem;
  /*this is not in the course, I added it to solve the problem, perhaps i omitted something while watching*/
}

.story__shape {
  width: 15rem;
  height: 15rem;
  overflow: hidden;
  /*this solves weird line beside image in circle*/
  float: left;
  shape-outside: circle(50% at 50% 50%);
  /*this value represents radius of 50% (7.5rem) and center of the circle (first value X axis,
                                                second value Y axis - like the translate (50%,50%) when centered inside container) 
                                                for this property, element must have defined float and width and height as well*/
  -webkit-clip-path: circle(50% at 50% 50%);
          clip-path: circle(50% at 50% 50%);
  -webkit-transform: skewX(12deg) translateX(-3rem);
          transform: skewX(12deg) translateX(-3rem);
  /*it's better not to mess with margin when floated element is the main actor, but to translate it
                                 with this transform property, element pops out of 6rem padding, so it has to be increased for 3rem on the left side*/
  position: relative;
}

.story__img {
  height: 100%;
  -webkit-transform: translateX(-4rem) scale(1.4);
          transform: translateX(-4rem) scale(1.4);
  /**/
  -webkit-transition: all .5s;
  transition: all .5s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /*it fixes some unexpected sensations during an animation*/
}

.story__text {
  -webkit-transform: skewX(12deg);
          transform: skewX(12deg);
}

.story__caption {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, 20%);
          transform: translate(-50%, 20%);
  /*20% because it should be below center so that animation can be performed*/
  color: #fff;
  font-size: 1.7rem;
  text-transform: uppercase;
  opacity: 0;
  -webkit-transition: all .5s;
  transition: all .5s;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /*to stop the bloody shaking*/
}

.story:hover .story__caption {
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  opacity: 1;
}

.story:hover .story__img {
  -webkit-transform: translateX(-4rem) scale(1);
          transform: translateX(-4rem) scale(1);
  -webkit-filter: blur(3px) brightness(80%);
          filter: blur(3px) brightness(80%);
  /*for brightness - values under 100% darken the image, and values above 100% lighten the image*/
}

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15;
}

.bg-video__content {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.header {
  height: 95vh;
  /*95 percent of the viewport height*/
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.8)), to(rgba(40, 180, 133, 0.8))), url(../img/hero.jpg);
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /*changing of the hex format into rgba is rather easy, click on the top bar in the color picker*/
  background-size: cover;
  /*cover up container fully always*/
  background-position: top;
  /*top of the image will always be visible the same as on the original img at the top despite minimizing or maximizing, 
                                rest of the img will be cropped*/
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*top left corner is the reference point for making the other vertices */
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  text-align: center;
}

.row {
  max-width: 114rem;
  margin: 0 auto;
}

.row:not(:last-child) {
  /*every row element will have defined margin-bottom except the last child element*/
  margin-bottom: 8rem;
}

.row::after {
  content: "";
  display: table;
  clear: both;
}

.row [class^="col-"] {
  /*select every class that begins with col-*/
  float: left;
}

.row [class^="col-"]:not(:last-child) {
  margin-right: 6rem;
}

.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
  /*it's important to divide every operator with one space*/
}

.row .col-1-of-3 {
  width: calc((100% - 2 * 6rem) / 3);
}

.row .col-2-of-3 {
  width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem);
}

.row .col-1-of-4 {
  width: calc((100% - 3 * 6rem) / 4);
}

.row .col-2-of-4 {
  width: calc(2 * ((100% - 3 * 6rem) / 4) +  6rem);
}

.row .col-3-of-4 {
  width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem);
}

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
  /*this is used to overlay that clipped white area and this value is calculated easily 95vh-75vh (this is read 
                        in header height partition)*/
}

.section-features {
  padding: 20rem 0;
  /*little bit of space to get modern and fresh look*/
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.8)), to(rgba(40, 180, 133, 0.8))), url(../img/nat-4.jpg);
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  -webkit-transform: skewY(-7deg);
          transform: skewY(-7deg);
  margin-top: -10rem;
}

.section-features > * {
  /*every direct child will be skewed by 7 deg to straighten it and clear its parents skew value */
  -webkit-transform: skewY(7deg);
          transform: skewY(7deg);
}

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -9rem;
}

.section-stories {
  position: relative;
  /*because of bg-video*/
  padding: 15rem 0;
}
/*# sourceMappingURL=main.css.map */