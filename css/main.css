/*
0-600px     Phones
600-900px   Tablet portrait
900-1200px  Tablet landscape
[1200-1800] is where normal styles apply
1800+px     Big desktop

breakpoint argument names
- phone
- tab-port
- tab-land
- big-desktop

ORDER: base + typography > general layout + grid > page layout > components


1em=16px
*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
    transform: translateX(-10rem);
    /*start from 100px left in comparison to original position*/ }
  80% {
    -webkit-transform: translateX(1rem);
    transform: translateX(1rem);
    /*at 80% of the animation move it 10px right of the original position */ }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0);
    /*at the and let it be where it is*/ } }

/*it's the most convenient to use only opacity and transform properties in animations*/
@keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
    transform: translateX(10rem); }
  80% {
    -webkit-transform: translateX(-1rem);
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    -webkit-transform: translateX(0);
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

*,
*::after,
*::before {
  /*this will apply to every after and before element as well, which wasn't the case earlier*/
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*this is moved to body, and this implies that each element will inherit box-sizing property value */ }

/*with this universal selector I apply all these features to every single element on the page*/
html {
  font-size: 62.5%;
  /*this is standard when defining font-size for later usage of rem units , percentages are mandatory here*/
  /*1rem=10px | 10/16=62.5%*/
  /*order of these includes is important, when looking at max-width, firstly will come higher values*/
  /*@include respond(phone){
        font-size: 50%;
    }*/
  /* this is unnecessary here because its inluded in tab-port here*/ }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 56.25%;
      /* 1rem = 9px | 9/16=0.5625*/ } }
  @media only screen and (max-width: 56.25em) {
    html {
      font-size: 50%;
      /* 1rem= 8px | 8/16=0.5*/ } }
  @media only screen and (min-width: 112.5em) {
    html {
      font-size: 75%;
      /* 1rem = 12px | 12/16=0.75*/ } }

body {
  padding: 3rem;
  /*this adds 30px of whitespace around entire page, which gives a cool modern look*/
  box-sizing: border-box; }
  @media only screen and (max-width: 56.25em) {
    body {
      padding: 0; } }

/*all of the font characteristics are written in the body selector, beacuse it's reasonable to take advantage of inheritance concept */
::selection {
  background-color: #55c57a;
  color: #fff; }

body {
  font-family: "Lato", sans-serif;
  /*font-size: 16px;*/
  font-weight: 400;
  line-height: 1.7;
  /*this means 1.7 bigger than the predefined line-height*/
  color: #777; }

/*all of the font characteristics are written in the body selector, beacuse it's reasonable to take advantage of inheritance concept */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /*to stop shaking after animation is done (albeit i do not see the shaking happened)*/
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    -webkit-animation-name: moveInLeft;
    animation-name: moveInLeft;
    -webkit-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-timing-function: ease-out;
    animation-timing-function: ease-out;
    /*
                animation-delay: 2s;
                animation-iteration-count: 2;
                */
    /*additional functions that are not needed now*/ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--main {
        font-size: 5rem;
        letter-spacing: 1rem; } }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    -webkit-animation: moveInRight 1s ease-out;
    animation: moveInRight 1s ease-out; }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--sub {
        letter-spacing: .5rem; } }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  /*firstly, this will paint the background of a text
                                                                                        and later the text itself, when new properties appear*/
  display: inline-block;
  /*cut taken space that isn't necessary*/
  -webkit-background-clip: text;
  /*this property is not so widely supported*/
  color: transparent;
  /*in order to background color get to view this is necessity*/
  letter-spacing: .2rem;
  transition: all .2s; }
  @media only screen and (max-width: 56.25em) {
    .heading-secondary {
      font-size: 2.5rem; } }
  @media only screen and (max-width: 37.5em) {
    .heading-secondary {
      font-size: 2rem; } }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scaleX(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    /*because paragraphs come repeatedly one after another they should be separated*/
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover; }

.btn, .btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  /* all the properties are considered here (stated and otherwise)*/
  position: relative;
  /*because of the :after element*/
  font-size: 1.6rem;
  border: none;
  cursor: pointer; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /*making real feeling of pulling the button up by adding shadow */ }
  .btn:hover:after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
    /*this is the trick for fading smt out*/ }

.btn:active, .btn:focus {
  outline: none;
  transform: translateY(-1px);
  /*this is in respect of inital position, NOT a hovered one */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  /*making real sense of pressing the button by reducing shadow that was present when hovered*/ }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white:after {
    background-color: #fff; }

.btn--green {
  background-color: #55c57a;
  color: #fff; }
  .btn--green:after {
    background-color: #55c57a; }

.btn:after {
  content: "";
  display: inline-block;
  width: 100%;
  /*after is the child element, and this 100% value signifies that it has exact same width as the btn*/
  height: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  /*this button is supposed to come from bottom with a little bit of delay*/
  animation-fill-mode: backwards;
  /*this will automatically apply the styles of the zero percent before the animation starts*/ }

.btn-text:link, .btn-text:visited {
  color: #55c57a;
  font-size: 1.6rem;
  display: inline-block;
  text-decoration: none;
  padding: 3px;
  /*small sizes can stay in px*/
  border-bottom: 1px solid #55c57a;
  transition: all .2s; }

.btn-text:hover {
  color: #fff;
  background-color: #55c57a;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-3px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.card {
  perspective: 150rem;
  /*gives 3d effect when rotating card (here concretely, it has wider range of usage)*/
  position: relative;
  height: 52rem;
  /*this has to be defined, because this container loses height due to absolute position of all it's children (they are 
                    out of normal flow); situation is similar to float, but there is no clearfix or alike thing to repair it*/ }
  .card__side {
    height: 52rem;
    width: 100%;
    transition: all .8s ease;
    position: absolute;
    /*setting two sides in one place, not separated one after another*/
    top: 0;
    left: 0;
    backface-visibility: hidden;
    border-radius: 3px;
    overflow: hidden;
    /*images that are put overflow this, and corners are losing border-radius*/
    /*because clip path is used below, even this won't work, so the radius have to be written manually*/
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    /*this could be written in a variable too, it's repeating a lot*/ }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    /*through experimentation*/
    background-blend-mode: screen;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    /*this is done again this way because clip-path removes overflow:hidden effect*/ }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg);
      /*only one level up beacuse i know this will compile into main.css which is one level above
                                                        current file*/ }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    color: #fff;
    text-transform: uppercase;
    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    box-decoration-break: clone;
    padding: 1rem 1.5rem;
    /*this way one-line text will be pushed to two lines*/ }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      margin: 0 auto;
      width: 80%; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    .card {
      height: auto;
      border-radius: 3px;
      background-color: #fff;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side {
      height: auto;
      position: relative;
      box-shadow: none; }
    .card__side--back {
      transform: rotateY(0);
      clip-path: polygon(0 15%, 100% 0, 100% 100%, 0% 100%); }
    .card:hover .card__side--front {
      transform: rotateY(0); }
    .card__details {
      padding: 1rem 3rem; }
    .card__cta {
      position: relative;
      top: 0%;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem; }
    .card__price-box {
      margin-bottom: 3rem; }
    .card__price-value {
      font-size: 4rem; } }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    /* getting images to be responsive as possible */
    border-radius: 2px;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    @media only screen and (max-width: 56.25em) {
      .composition__photo {
        float: left;
        position: relative;
        width: 33.333%;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2); } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p1 {
          top: 0;
          transform: scale(1.1); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem;
      z-index: 11; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p2 {
          top: -1rem;
          transform: scale(1.3); } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p3 {
          top: 1rem;
          left: 0;
          transform: scale(1.2); } }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      /*move it a bit up, to get full effect of picking*/
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    /*it's important that the hovered element is the parent of the elements that are affected by this*/
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  @media only screen and (max-width: 56.25em) {
    .feature-box {
      padding: 2rem; } }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    display: inline-block;
    -webkit-background-clip: text;
    color: transparent; }
    @media only screen and (max-width: 56.25em) {
      .feature-box__icon {
        margin-bottom: 0; } }

.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  font-family: inherit;
  /*browser puts it's own font-family when input elements are considered, so it has to be daone manually again*/
  color: inherit;
  /*same as font-family*/
  font-size: 1.5rem;
  padding: 1.5rem 2rem;
  background-color: rgba(255, 255, 255, 0.5);
  width: 90%;
  display: block;
  border-radius: 2px;
  border: none;
  border-bottom: 3px solid transparent;
  /*if this is specified i have no troubles with moving down of smt for 3px when input is focused*/
  transition: .3s all; }
  .form__input:focus {
    outline: none;
    /*when this is done, you should define something that will make focused element visible and recognizable*/
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
    border-bottom: 3px solid #55c57a; }
  .form__input:focus:invalid {
    /*this is only for form elements and has to be paired with some limitations (like required max/min legth ...)*/
    border-bottom: 3px solid #ff7730; }
  .form__input::placeholder {
    /*or -webkit-input-placeholder*/
    color: #999; }

.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  margin-top: .7rem;
  margin-left: 2rem;
  display: block;
  transition: all .3s; }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  transform: translateY(-4rem); }

.form__radio-group {
  width: 49%;
  /*they should be in one line, this can be used instead of floats*/
  display: inline-block; }
  @media only screen and (max-width: 56.25em) {
    .form__radio-group {
      width: 100%;
      margin-bottom: 2rem; } }

.form__radio-input {
  display: none; }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  /*parent element of button downward*/
  padding-left: 4.5rem;
  /*for the sake of button*/ }

.form__radio-button {
  height: 3rem;
  width: 3rem;
  border: 5px solid #55c57a;
  border-radius: 50%;
  display: inline-block;
  /*those attributes will work only if this is defined as inline-block or block*/
  position: absolute;
  top: -.42rem;
  left: 0; }
  .form__radio-button::after {
    /*making of inner green circle (when selected)*/
    content: "";
    height: 1.3rem;
    width: 1.3rem;
    display: block;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #55c57a;
    opacity: 0;
    transition: opacity .2s; }

.form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
  /*here i could have used + instead of ~ beacuse they are adjacent siblings*/
  opacity: 1; }

.popup {
  height: 100vh;
  width: 100vw;
  background-color: rgba(51, 51, 51, 0.85);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 3000;
  opacity: 0;
  visibility: hidden;
  transition: all .3s; }
  @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
    .popup {
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
      background-color: rgba(51, 51, 51, 0.3); } }
  .popup__content {
    width: 75%;
    background-color: #fff;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    position: absolute;
    top: 50%;
    left: 50%;
    display: table;
    overflow: hidden;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.25);
    transition: all .5s .2s; }
    @media only screen and (max-width: 75em) {
      .popup__content {
        width: 90%; } }
    @media only screen and (max-width: 56.25em) {
      .popup__content {
        width: 75%; } }
    @media only screen and (max-width: 37.5em) {
      .popup__content {
        width: 95%; } }
  .popup__left {
    width: 33.333%;
    display: table-cell; }
    @media only screen and (max-width: 56.25em) {
      .popup__left {
        display: none; } }
  .popup__right {
    width: 66.667%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem; }
    @media only screen and (max-width: 56.25em) {
      .popup__right {
        vertical-align: auto; } }
  .popup__img {
    display: block;
    width: 100%; }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #777;
    hyphens: auto; }
    @media only screen and (max-width: 37.5em) {
      .popup__text {
        column-count: 1;
        column-gap: 0;
        column-rule: 0; } }
  .popup:target {
    visibility: visible;
    opacity: 1; }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__close:link, .popup__close:visited {
    color: #999;
    text-decoration: none;
    font-size: 3rem;
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    line-height: 1;
    /*without this, height of an element is higher, because it's text after all*/
    transition: all .2s; }
  .popup__close:hover {
    color: #55c57a; }
  .popup__exit-link {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    cursor: default; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg); }
  @media only screen and (max-width: 56.25em) {
    .story {
      width: 100%;
      padding: 4rem;
      padding-left: 7rem; } }
  @media only screen and (max-width: 37.5em) {
    .story {
      transform: skewX(0); } }
  .story:not(:last-child) {
    margin-bottom: 8rem;
    /*this is not in the course, I added it to solve the problem, perhaps i omitted something while watching*/ }
  .story__shape {
    width: 15rem;
    height: 15rem;
    overflow: hidden;
    /*this solves weird line beside image in circle*/
    border-radius: 50%;
    float: left;
    transform: skewX(12deg) translateX(-3rem);
    /*it's better not to mess with margin when floated element is the main actor, but to translate it
                                 with this transform property, element pops out of 6rem padding, so it has to be increased for 3rem on the left side*/
    position: relative; }
    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
      .story__shape {
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        border-radius: none;
        shape-outside: circle(50% at 50% 50%);
        /*this value represents radius of 50% (7.5rem) and center of the circle (first value X axis,
                                                second value Y axis - like the translate (50%,50%) when centered inside container) 
                                                for this property, element must have defined float and width and height as well*/ } }
    @media only screen and (max-width: 56.25em) {
      .story__shape {
        width: 10rem;
        height: 10rem; } }
    @media only screen and (max-width: 37.5em) {
      .story__shape {
        transform: translateX(-3rem) skewX(0); } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    /**/
    transition: all .5s;
    backface-visibility: hidden;
    /*it fixes some unexpected sensations during an animation*/ }
    @media only screen and (max-width: 56.25em) {
      .story__img {
        transform: translateX(-3rem) scale(1.4); } }
  .story__text {
    transform: skewX(12deg); }
    @media only screen and (max-width: 37.5em) {
      .story__text {
        transform: skewX(0); } }
  .story__caption {
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    /*20% because it should be below center so that animation can be performed*/
    color: #fff;
    font-size: 1.7rem;
    text-transform: uppercase;
    opacity: 0;
    transition: all .5s;
    backface-visibility: hidden;
    /*to stop the bloody shaking*/ }
  .story:hover .story__caption {
    transform: translate(-50%, -50%);
    opacity: 1; }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%);
    /*for brightness - values under 100% darken the image, and values above 100% lighten the image*/ }
    @media only screen and (max-width: 56.25em) {
      .story:hover .story__img {
        transform: translateX(-3rem) scale(1); } }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7; }
  @media only screen and (max-width: 56.25em) {
    .footer {
      padding: 8rem 0; } }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .footer__logo-box {
        margin-bottom: 6rem; } }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block;
    /*does'nt have to occupy the whole container*/ }
    @media only screen and (max-width: 56.25em) {
      .footer__navigation {
        width: 100%;
        text-align: center; } }
  .footer__list {
    list-style: none; }
  .footer__item {
    display: inline-block; }
    .footer__item:not(:last-child) {
      margin-right: 1.5rem; }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    background-color: #333;
    /*this way when a hover over it, this will be opaque and the text behind it won't be seen*/
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .2s; }
  .footer__link:hover, .footer__link:active {
    color: #55c57a;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 80%;
    float: right; }
    @media only screen and (max-width: 56.25em) {
      .footer__copyright {
        width: 100%;
        text-align: center;
        float: none; } }

.header {
  height: 85vh;
  /*85 percent of the viewport height*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero-small.jpg);
  /*changing of the hex format into rgba is rather easy, click on the top bar in the color picker*/
  background-size: cover;
  /*cover up container fully always*/
  background-position: top;
  /*top of the image will always be visible the same as on the original img at the top despite minimizing or maximizing, 
                                rest of the img will be cropped*/
  position: relative; }
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      /*top left corner is the reference point for making the other vertices */
      height: 95vh;
      /*95 percent of the viewport height*/ } }
  @media (min-resolution: 192dpi) and (min-width: 37.5em), (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), (min-width: 125em) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg); } }
  @media only screen and (max-width: 56.25em) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); } }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    /*every row element will have defined margin-bottom except the last child element*/
    margin-bottom: 8rem; }
    @media only screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 8rem; } }
  @media only screen and (max-width: 56.25em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2);
    /*it's important to divide every operator with one space*/ }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) +  6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }
  .row [class^="col-"] {
    /*select every class that begins with col-*/
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
      @media only screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 8rem; } }
    @media only screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100%; } }

.navigation__checkbox {
  display: none; }

.navigation__button {
  background-color: #fff;
  height: 7rem;
  width: 7rem;
  border-radius: 50%;
  position: fixed;
  top: 6rem;
  right: 6rem;
  z-index: 2000;
  text-align: center;
  cursor: pointer; }
  @media only screen and (max-width: 56.25em) {
    .navigation__button {
      top: 4rem;
      right: 4rem; } }
  @media only screen and (max-width: 37.5em) {
    .navigation__button {
      top: 3rem;
      right: 3rem; } }

.navigation__background {
  height: 6rem;
  width: 6rem;
  border-radius: 50%;
  position: fixed;
  top: 6.5rem;
  right: 6.5rem;
  background-image: radial-gradient(#7ed56f, #28b485);
  z-index: 1000;
  transition: all .8s; }
  @media only screen and (max-width: 56.25em) {
    .navigation__background {
      top: 4.5rem;
      right: 4.5rem; } }
  @media only screen and (max-width: 37.5em) {
    .navigation__background {
      top: 3.5rem;
      right: 3.5rem; } }

.navigation__nav {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1500;
  visibility: hidden;
  opacity: 0;
  transition: all .8s; }

.navigation__list {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  list-style: none;
  text-align: center; }

.navigation__item {
  margin: 1rem; }

.navigation__link:link, .navigation__link:visited {
  display: inline-block;
  font-size: 3rem;
  font-weight: 300;
  text-transform: uppercase;
  color: #fff;
  text-decoration: none;
  padding: 1rem 2rem;
  background-image: linear-gradient(120deg, transparent 50%, #fff 50%);
  background-size: 225%;
  transition: all .4s; }
  .navigation__link:link span, .navigation__link:visited span {
    margin-right: 1.5rem;
    display: inline-block; }

.navigation__link:hover, .navigation__link:active {
  background-position: 100%;
  color: #55c57a;
  transform: translateX(1rem); }

.navigation__checkbox:checked ~ .navigation__background {
  transform: scale(80); }

.navigation__checkbox:checked ~ .navigation__nav {
  opacity: 1;
  visibility: visible; }

.navigation__icon {
  position: relative;
  margin-top: 3.5rem; }
  .navigation__icon, .navigation__icon::after, .navigation__icon::before {
    display: inline-block;
    width: 3rem;
    height: 2px;
    background-color: #333; }
  .navigation__icon::after, .navigation__icon::before {
    content: "";
    position: absolute;
    left: 0;
    transition: all .2s; }
  .navigation__icon::before {
    top: -.8rem; }
  .navigation__icon::after {
    top: .8rem; }

.navigation__button:hover .navigation__icon::before {
  top: -1rem; }

.navigation__button:hover .navigation__icon::after {
  top: 1rem; }

.navigation__checkbox:checked + .navigation__button > .navigation__icon {
  background-color: transparent; }

.navigation__checkbox:checked + .navigation__button > .navigation__icon::after {
  top: 0;
  transform: rotate(135deg); }

.navigation__checkbox:checked + .navigation__button > .navigation__icon::before {
  top: 0;
  transform: rotate(-135deg); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
  /*this is used to overlay that clipped white area and this value is calculated easily 95vh-75vh (this is read 
                        in header height partition)*/ }
  @media only screen and (max-width: 56.25em) {
    .section-about {
      padding: 20rem 0; } }

.section-features {
  padding: 20rem 0;
  /*little bit of space to get modern and fresh look*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -10rem; }
  .section-features > * {
    /*every direct child will be skewed by 7 deg to straighten it and clear its parents skew value */
    transform: skewY(7deg); }
  @media only screen and (max-width: 56.25em) {
    .section-features {
      padding: 10rem 0; } }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -9rem; }
  @media only screen and (max-width: 56.25em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }

.section-stories {
  position: relative;
  /*because of bg-video*/
  padding: 15rem 0; }
  @media only screen and (max-width: 56.25em) {
    .section-stories {
      padding: 10rem 0; } }

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
  @media only screen and (max-width: 56.25em) {
    .section-book {
      padding: 10rem 0; } }

.book {
  /*this is partly in the home partial beacuse it has some very specific properties*/
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: 100%;
  /*100% fills up the x axis*/
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2); }
  @media only screen and (max-width: 75em) {
    .book {
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 56.25em) {
    .book {
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg); } }
  .book__form {
    width: 50%;
    padding: 6rem; }
    @media only screen and (max-width: 75em) {
      .book__form {
        width: 65%; } }
    @media only screen and (max-width: 56.25em) {
      .book__form {
        width: 100%; } }
